from flask import Flask, request, jsonify
import numpy as np
import cv2
import tensorflow as tf
from flask_cors import CORS

# Initialize Flask app
app = Flask(__name__)
CORS(app)  # Allow React frontend to connect

# Load the trained ML model
model = tf.keras.models.load_model('model.h5')

# Define class labels (update based on your dataset)
class_names = ['A', 'B', 'C', 'D', 'E']

@app.route('/predict', methods=['POST'])
def predict():
    file = request.files['file']
    if not file:
        return jsonify({'error': 'No file uploaded'}), 400

    # Read image
    npimg = np.frombuffer(file.read(), np.uint8)
    img = cv2.imdecode(npimg, cv2.IMREAD_COLOR)

    # Preprocessing
    img = cv2.resize(img, (64, 64))  # Resize to match model input
    img = img / 255.0
    img = np.expand_dims(img, axis=0)

    # Prediction
    prediction = model.predict(img)
    predicted_class = class_names[np.argmax(prediction)]

    return jsonify({'prediction': predicted_class})

if __name__ == '__main__':
    app.run(host='0.0.0.0', port=5000)

